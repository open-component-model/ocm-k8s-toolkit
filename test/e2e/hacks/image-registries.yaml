# Password-protected registry (replication tests)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: protected-registry1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: protected-registry1
  template:
    metadata:
      labels:
        app: protected-registry1
    spec:
      containers:
        - name: protected-registry1
          image: registry:2
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: registry-auth-volume
              mountPath: /etc/registry
              readOnly: true
          env:
            - name: REGISTRY_HTTP_SECRET
              value: "myRandomSecretKey"
            - name: REGISTRY_AUTH
              value: "htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: "/etc/registry/htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
      volumes:
        - name: registry-auth-volume
          secret:
            secretName: registry-secret1
---
# External port to the image registry. Can be reached from the host with 'localhost:31002'
apiVersion: v1
kind: Service
metadata:
  name: protected-registry1-external
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 5002
      targetPort: 5000
      nodePort: 31002
  selector:
    app: protected-registry1
---
# Internal port to the image registry. Can be reached from inside the cluster with 'http://protected-registry1-internal.default.svc.cluster.local:5002/'
apiVersion: v1
kind: Service
metadata:
  name: protected-registry1-internal
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 5002
      targetPort: 5000
  selector:
    app: protected-registry1
---
# Secret for the first password-protected registry.
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret1
type: Opaque
data:
  htpasswd: YWRtaW46JDJ5JDA1JDJKN3N4MDEwbnpNTGNpNktkcVpmbE9mYmxnU2Q2eU9nMW9Wd1hSdHBtOWFXbFA1L25iLlZHCgo=
---
# Second password-protected registry.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: protected-registry2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: protected-registry2
  template:
    metadata:
      labels:
        app: protected-registry2
    spec:
      containers:
        - name: protected-registry2
          image: registry:2
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: registry-auth-volume
              mountPath: /etc/registry
              readOnly: true
          env:
            - name: REGISTRY_HTTP_SECRET
              value: "myRandomSecretKey"
            - name: REGISTRY_AUTH
              value: "htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: "/etc/registry/htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
      volumes:
        - name: registry-auth-volume
          secret:
            secretName: registry-secret2
---
# External port to the image registry. Can be reached from the host with 'localhost:31003'
apiVersion: v1
kind: Service
metadata:
  name: protected-registry2-external
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 5003
      targetPort: 5000
      nodePort: 31003
  selector:
    app: protected-registry2
---
# Internal port to the image registry. Can be reached from inside the cluster with 'http://protected-registry2-internal.default.svc.cluster.local:5003/'
apiVersion: v1
kind: Service
metadata:
  name: protected-registry2-internal
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 5003
      targetPort: 5000
  selector:
    app: protected-registry2
---
# Secret for the second password-protected registry.
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret2
type: Opaque
data:
  htpasswd: YWRtaW4yOiQyeSQwNSR3aEk2dHREZGFZR1BhTllraUhycWRPSnVxY2lKRnU5aUJ1S0NobzZzTk9YblllTlJBUzBmdQoK