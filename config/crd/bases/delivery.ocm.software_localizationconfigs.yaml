---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: localizationconfigs.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: LocalizationConfig
    listKind: LocalizationConfigList
    plural: localizationconfigs
    singular: localizationconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          LocalizationConfig defines a description of a localization.
          It contains the necessary localization rules that can be used in conjunction with a data source to localize resources.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              LocalizationConfigSpec defines the desired state of LocalizationConfig.
              It contains the necessary localization rules that can be used in conjunction with a data source to localize resources.
              For more information, see the LocalizationRule type.
            properties:
              rules:
                items:
                  description: |-
                    LocalizationRule defines a rule that can be used to localize resources.
                    Each rule contains a source reference, a target reference, and a transformation, with each of these fields
                    being omittable except for target.
                  properties:
                    goTemplate:
                      description: "LocalizationRuleGoTemplate is a rule that can
                        be used to localize resources based on a goTemplate applied
                        to a file.\n\nExample:\n\n\tgoTemplate:\n\t  file:\n\t    path:
                        values.yaml\n\t  data:\n\t    key: value\n\t  delimiters:\n\t
                        \   left: \"ocm{{\"\n\t    right: \"}}ocm\"\n\nFor more information
                        on the Map type, see the subtypes for Resource, FileTarget
                        and Transformation."
                      properties:
                        data:
                          description: "GoTemplateData is an arbitrary object that
                            is forwarded to the GoTemplate for use as a struct.\n\nExample:\n\n\tgoTemplate:\n\t
                            \ data:\n\t    key: value\n\nThis would then lead to a
                            struct that can be used in the GoTemplate (assuming standard
                            Delimiters):\n\n\t{{ .key }}"
                          x-kubernetes-preserve-unknown-fields: true
                        delimiters:
                          description: |-
                            GoTemplateDelimiters are used to specify the delimiters that are used in the GoTemplate parsing process.
                            If one wants to use a different delimiter than the default "{{" and "}}", one can specify them here.
                          properties:
                            left:
                              type: string
                            right:
                              type: string
                          required:
                          - left
                          - right
                          type: object
                        file:
                          description: FileTarget is used to identify the file where
                            the rule will apply its data to (parse the GoTemplate)
                          properties:
                            path:
                              description: The Path is the filepath (relative to the
                                Resource) to the file inside the resource.
                              type: string
                            value:
                              description: The Value is a reference to the content
                                that should be localized.
                              type: string
                          required:
                          - path
                          type: object
                      required:
                      - file
                      type: object
                    map:
                      description: "LocalizationRuleMap is a rule that can be used
                        to localize resources based on a mapping from resources to
                        paths.\n\nExample:\n\n\tmap:\n\t  resource:\n\t    name: image\n\t
                        \ file:\n\t    path: values.yaml\n\t    value: deploy.image\n\t
                        \ transformation:\n\t    type: Repository\n\nFor more information
                        on the Map type, see the subtypes for Resource, FileTarget
                        and Transformation."
                      properties:
                        file:
                          description: |-
                            FileTarget is used to identify the file where the rule will apply its data to after considering
                            the transformation.
                          properties:
                            path:
                              description: The Path is the filepath (relative to the
                                Resource) to the file inside the resource.
                              type: string
                            value:
                              description: The Value is a reference to the content
                                that should be localized.
                              type: string
                          required:
                          - path
                          type: object
                        resource:
                          description: |-
                            The Resource reference is used to identify the resource that will be used to fill in the target reference.
                            If one has a ComponentDescriptor with 2 resources, one can use this to reference between them.
                            For a Component Descriptor with two resources, a "deployment-instruction" (to be localized)
                            and an "image" (to be localized from), one can use the following source:

                              map:
                                resource:
                                  name: image

                            The localization will then look into the corresponding descriptor and resolve its AccessType:
                              components:
                               - component:
                                   # ...
                                   resources:
                                     - access:
                                         imageReference: ghcr.io/stefanprodan/podinfo:6.2.0
                                         type: ociArtifact
                                       name: image
                                       relation: external
                                       type: ociImage
                                       version: 6.2.0
                                   sources: []
                                   version: 1.0.0
                                 meta:
                                   schemaVersion: v2

                            This would then lead to a value of "ghcr.io/stefanprodan/podinfo:6.2.0".
                          properties:
                            extraIdentity:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        transformation:
                          description: |-
                            The Transformation is used to tell the rule additional information about how to transform the content.
                            The transformation can be used to digest the source in a different way or interpret the rule differently.
                            A simple example of this is the TransformationTypeRepository,
                            which extracts the registry portion of an image reference:

                            Example:
                              map:
                                transformation:
                                  type: Repository

                            The default TransformationType is TransformationTypeImage, which extracts the full image reference.
                            For more information on individual TransformationType's, see their respective documentation.
                          properties:
                            type:
                              default: Image
                              type: string
                          type: object
                      required:
                      - file
                      - resource
                      type: object
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
