name: CI

on:
  pull_request:
    paths-ignore:
      - 'CODE_OF_CONDUCT.md'
      - 'README.md'
      - 'Contributing.md'
  workflow_call:

  push:
    branches:
      - main

permissions:
  contents: read # for actions/checkout to fetch code

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '${{ github.workspace }}/go.mod'
      - id: get-golangci-lint-version
        run: |
          version=$(grep 'GOLANGCI_LINT_VERSION\s*?' Makefile | awk -F '=' '{print $2}' | tr -d ' ')
          echo "GOLANGCI_LINT_VERSION=${version}" >> $GITHUB_ENV
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '${{ github.workspace }}/go.mod'
          cache: false

      - name: Get Go environment
        run: |
          echo "go_cache=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "go_modcache=$(go env GOMODCACHE)" >> $GITHUB_ENV
      - name: Set up cache
        # https://github.com/actions/setup-go/issues/358 - cache is not working with setup-go for multiple jobs
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.go_cache }}
            ${{ env.go_modcache }}
          key: ${{ env.cache_name }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ env.cache_name }}-${{ runner.os }}-go-
        env:
          cache_name: manual-go-cache

      - name: Restore K8s Cache
        id: cache-k8s-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            bin/k8s
          key: ${{ runner.os }}-k8s

      - name: Run tests
        run: make test

      - name: Save K8s Cache
        id: cache-k8s-save
        uses: actions/cache/save@v4
        with:
          path: |
            bin/k8s
          key: ${{ steps.cache-k8s-restore.outputs.cache-primary-key }}

  e2e-tests:
    env:
      HELM_CHART: ghcr.io/stefanprodan/charts/podinfo:6.7.1
      IMAGE_REFERENCE: ghcr.io/stefanprodan/podinfo:6.7.1
      IMAGE_REGISTRY_URL: http://localhost:31000
      INTERNAL_IMAGE_REGISTRY_URL: http://registry-internal.default.svc.cluster.local:5000
    runs-on: large_runner
    steps:
      - name: Self Hosted Runner Post Job Cleanup Action
        uses: TooMuch4U/actions-clean@v2.2
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '${{ github.workspace }}/go.mod'
          cache: false

      - name: Get Go environment
        run: |
          echo "go_cache=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "go_modcache=$(go env GOMODCACHE)" >> $GITHUB_ENV
      - name: Set up cache
        # https://github.com/actions/setup-go/issues/358 - cache is not working with setup-go for multiple jobs
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.go_cache }}
            ${{ env.go_modcache }}
            bin/k8s
          key: ${{ env.cache_name }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ env.cache_name }}-${{ runner.os }}-go-
        env:
          cache_name: integration-test

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1
        with:
          config: test/e2e/config/kind-config.yaml

      - name: Install internal image registry
        run: |
          kubectl apply -f test/e2e/config/image-registry.yaml
          kubectl wait pod -l app=registry --for condition=Ready --timeout 5m

      - name: Checkout helm-controller
        uses: actions/checkout@v4
        with:
          repository: openfluxcd/helm-controller
          path: helm-controller

      - name: Install helm-controller
        run: |
          IMG=localhost:31000/helm-controller:latest make -C helm-controller docker-build
          IMG=localhost:31000/helm-controller:latest make -C helm-controller docker-push
          make -C helm-controller install
          IMG=localhost:31000/helm-controller:latest make -C helm-controller deploy

      - name: Checkout kustomize-controller
        uses: actions/checkout@v4
        with:
          repository: openfluxcd/kustomize-controller
          path: kustomize-controller

      - name: Install kustomize-controller
        run: |
          IMG=localhost:31000/kustomize-controller:latest make -C kustomize-controller docker-build
          IMG=localhost:31000/kustomize-controller:latest make -C kustomize-controller docker-push
          make -C kustomize-controller install
          IMG=localhost:31000/kustomize-controller:latest make -C kustomize-controller deploy

      - name: Run e2e test
        run: IMAGE_REGISTRY_URL=http://localhost:31000 INTERNAL_IMAGE_REGISTRY_URL=http://registry-internal.default.svc.cluster.local:5000 make test-e2e
